# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - BPC-Niksa

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  app-name: "BPC-Niksa"
  rg-name: "CSD-CA1" 
  AZURE_WEBAPP_PACKAGE_PATH: '.'


jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' 
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
            New-Item -Path .\.sonar\scanner -ItemType Directory
            dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Analyze
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
            .\.sonar\scanner\dotnet-sonarscanner begin /k:"NiksaJadric_Blood-Pressure-Calc-App" /o:"niksajadric" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
            dotnet build --configuration Release  #  This is where I build the applilcation
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Run unit tests
        run: dotnet test BPCalculatorUnitTest\BPCalculatorUnitTest.csproj --collect "Code Coverage" -l:trx

      - name: Publish unit test results
        uses: dorny/test-reporter@v1
        with:
         artifact: ''                   # artifact name
         name: MS Tests                 # Name of the check run which will be created
         path: '**.trx'                 # Path to test results (inside artifact .zip)
         reporter: 'dotnet-trx'         # Format of test results

  #    - uses: actions/upload-artifact@v3
  #      with:
  #       name: my-artifact
  #       path: path/to/artifact/world.txt 


      - name: Run acceptance tests
        run: dotnet test BPCalculatorAcceptanceTest\BPCalculatorAcceptanceTest.csproj --collect "Code Coverage"

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy_staging:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App Staging
        id: deploy-to-webapp-staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.app-name }}
          slot-name: 'Staging'
          publish-profile: ${{ secrets.AZURE_WEBAPP_STAGING_PP }}
          package: .

      # Run Selenium tests
      - name: Run Selenium tests        
        run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp/SeleniumTests.dll /Settings:SeleniumTests.runsettings --logger:"trx;LogFileName=selenium.trx"
  
      # Upload results of selenium tests
      - uses: actions/upload-artifact@v3
        with:
         name: Selenium Tests Results
         path: TestResults/selenium.trx

# SWAP SLOTS
    # login to Azure account
      - uses: azure/login@v1
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}                         # JSON objects which represents service principal

    # blue/green
      - name: swap staging and production slots
        run: |
         az webapp deployment slot swap -n ${{ env.app-name }} -g ${{ env.rg-name }} --slot staging --target-slot production 


#  deploy:
#    runs-on: windows-latest
#    needs: deploy_staging
#    environment:
#      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v3
#        with:
#          name: .net-app

#      - name: Deploy to Azure Web App
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: ${{ env.app-name }}
#          slot-name: 'Production'
#          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_33BA270F1FC44BEF99E61565C31E8E5C }}
#          package: .
